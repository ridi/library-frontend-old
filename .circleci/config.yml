version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.9
commands:
  install:
    description: Install Dependencies
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
  s3-deploy:
    description: Deploy to S3 bucket
    parameters:
      to:
        type: string
      exclude_params:
        type: string
        default: ''
      index:
        type: string
        default: 'index.html'
      access_key_id:
        type: env_var_name
        default: PROD_AWS_ACCESS_KEY_ID
      secret_access_key:
        type: env_var_name
        default: PROD_AWS_SECRET_ACCESS_KEY
    steps:
      - attach_workspace:
          at: out
      - aws-s3/sync:
          from: out
          to: <<parameters.to>>
          aws-access-key-id: <<parameters.access_key_id>>
          aws-secret-access-key: <<parameters.secret_access_key>>
          arguments: |
            --acl public-read \
            --cache-control "max-age=31536000" \
            <<parameters.exclude_params>>
      - aws-s3/copy:
          from: '<<parameters.to>>/index.html'
          to: '<<parameters.to>>/index.html'
          aws-access-key-id: <<parameters.access_key_id>>
          aws-secret-access-key: <<parameters.secret_access_key>>
          arguments: |
            --metadata-directive REPLACE \
            --acl public-read \
            --cache-control "max-age=0,no-cache,no-store,must-revalidate"
executors:
  deploy-executor:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/project
jobs:
  build:
    docker:
      - image: circleci/node
    working_directory: ~/project
    parameters:
      ENVIRONMENT:
        type: string
        default: production
    steps:
      - checkout
      - install
      - run:
          name: Build next.js application
          command: yarn build
          environment:
            ENVIRONMENT: ENVIRONMENT
      - run:
          name: Export outputs
          command: yarn export
      - persist_to_workspace:
          root: .
          paths:
            - out
  deploy-dev:
    executor: deploy-executor
    steps:
      - s3-deploy:
          to: 's3://ridi-library-dev-test'
          exclude_params: --exclude "staging.html"
          access_key_id: DEV_AWS_ACCESS_KEY_ID
          secret_access_key: DEV_AWS_SECRET_ACCESS_KEY
  deploy-stage:
    executor: deploy-executor
    steps:
      - s3-deploy:
          to: 's3://ridi-library-dev-test'
          exclude_params: --exclude "index.html" --exclude "*.map"
          index: "staging.html"
          access_key_id: DEV_AWS_ACCESS_KEY_ID
          secret_access_key: DEV_AWS_SECRET_ACCESS_KEY
  deploy-prod:
    executor: deploy-executor
    steps:
      - s3-deploy:
          to: 's3://ridi-library-dev-test'
          exclude_params: --exclude "staging.html" --exclude "*.map"
          access_key_id: DEV_AWS_ACCESS_KEY_ID
          secret_access_key: DEV_AWS_SECRET_ACCESS_KEY
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          name: build-dev
          filters:
            branches:
              only:
                - master
                - add-circle-ci
          ENVIRONMENT: development
      - build:
          name: build-prod
          filters:
            branches:
              only:
                - master
                - release
      - deploy-dev:
          requires:
            - build-dev
          filters:
            branches:
              only:
                - master
                - add-circle-ci
      - deploy-stage:
          requires:
            - build-prod
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
            - build-prod
          filters:
            branches:
              only: release